{"ast":null,"code":"var _jsxFileName = \"/Users/ingibitr/Documents/Ruby_labs2/Ruby_labs/final_app_v2/app/javascript/components/App.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nvar App = /*#__PURE__*/function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n\n    _this.loginStatus = function () {\n      axios.get('http://localhost:3001/logged_in', {\n        withCredentials: true\n      }).then(function (response) {\n        if (response.data.logged_in) {\n          _this.handleLogin(response);\n        } else {\n          _this.handleLogout();\n        }\n      })[\"catch\"](function (error) {\n        return console.log('api errors:', error);\n      });\n    };\n\n    _this.handleLogin = function (data) {\n      _this.setState({\n        isLoggedIn: true,\n        user: data.user\n      });\n    };\n\n    _this.handleLogout = function () {\n      _this.setState({\n        isLoggedIn: false,\n        user: {}\n      });\n    };\n\n    _this.state = {\n      isLoggedIn: false,\n      user: {}\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.loginStatus();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(BrowserRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Switch, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/signup\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default (function (props) {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, Routes);\n});\n;","map":{"version":3,"sources":["/Users/ingibitr/Documents/Ruby_labs2/Ruby_labs/final_app_v2/app/javascript/components/App.jsx"],"names":["React","Component","axios","BrowserRouter","Switch","Route","App","props","loginStatus","get","withCredentials","then","response","data","logged_in","handleLogin","handleLogout","error","console","log","setState","isLoggedIn","user","state","Routes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,EAAwBC,MAAxB,EAAgCC,KAAhC,QAA6C,kBAA7C;;IACMC,G;;;;;AACF,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAUnBC,WAVmB,GAUL,YAAM;AAChBN,MAAAA,KAAK,CAACO,GAAN,CAAU,iCAAV,EACI;AAAEC,QAAAA,eAAe,EAAE;AAAnB,OADJ,EAEKC,IAFL,CAEU,UAAAC,QAAQ,EAAI;AACd,YAAIA,QAAQ,CAACC,IAAT,CAAcC,SAAlB,EAA6B;AACzB,gBAAKC,WAAL,CAAiBH,QAAjB;AACH,SAFD,MAEO;AACH,gBAAKI,YAAL;AACH;AACJ,OARL,WASW,UAAAC,KAAK;AAAA,eAAIC,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,KAA3B,CAAJ;AAAA,OAThB;AAUH,KArBkB;;AAAA,UAsBnBF,WAtBmB,GAsBL,UAACF,IAAD,EAAU;AACpB,YAAKO,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAE,IADF;AAEVC,QAAAA,IAAI,EAAET,IAAI,CAACS;AAFD,OAAd;AAIH,KA3BkB;;AAAA,UA4BnBN,YA5BmB,GA4BJ,YAAM;AACjB,YAAKI,QAAL,CAAc;AACVC,QAAAA,UAAU,EAAE,KADF;AAEVC,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIH,KAjCkB;;AAEf,UAAKC,KAAL,GAAa;AACTF,MAAAA,UAAU,EAAE,KADH;AAETC,MAAAA,IAAI,EAAE;AAFG,KAAb;AAFe;AAMlB;;;;wCACmB;AAChB,WAAKd,WAAL;AACH;;;6BA0BQ;AACL,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,eAEI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAGI,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAC,SAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,CADJ,CADJ;AAWH;;;;EAhDaP,S;;AAkDlB,gBAAe,UAAAM,KAAK;AAAA,sBAAI,0CAAGiB,MAAH,CAAJ;AAAA,CAApB;AAAsC","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoggedIn: false,\n            user: {}\n        };\n    }\n    componentDidMount() {\n        this.loginStatus()\n    }\n    loginStatus = () => {\n        axios.get('http://localhost:3001/logged_in',\n            { withCredentials: true })\n            .then(response => {\n                if (response.data.logged_in) {\n                    this.handleLogin(response)\n                } else {\n                    this.handleLogout()\n                }\n            })\n            .catch(error => console.log('api errors:', error))\n    }\n    handleLogin = (data) => {\n        this.setState({\n            isLoggedIn: true,\n            user: data.user\n        })\n    }\n    handleLogout = () => {\n        this.setState({\n            isLoggedIn: false,\n            user: {}\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <BrowserRouter>\n                    <Switch>\n                        <Route exact path='/' />\n                        <Route exact path='/login' />\n                        <Route exact path='/signup' />\n                    </Switch>\n                </BrowserRouter>\n            </div>\n        );\n    }\n}\nexport default props => <>{Routes}</>;;"]},"metadata":{},"sourceType":"module"}